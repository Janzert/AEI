[global]
# Url of gameroom to connect to
gameroom_url = http://arimaa.com/arimaa/gameroom

# Minimum time for a move so we don't flood the server
min_move_time = 5

# Time left on the clock when bot controller will try to force the bot to reply
min_time_left = 9

# Directory for files to keep track of running bots
run_dir = ./running

# Maximum number of bots that can be active at one time
max_bots = 1

# bot section to use
default_engine = bot_example

[Logging]
# directory to write the log files to
directory = ./logs

# overall log level
# Valid levels are (in order of most to least verbose):
#   Debug
#   Info
#   Warning
#   Error
level = Debug

# Output to the console or not. Unless the interface is being run in an
# environment where it specifically should not write *anything* to stdout
# or stderr this should be left set to True. If you just want to stop seeing
# most of the output from the interface it is almost certainly better to set
# the 'console_level' below to either the Warning or Error level.
# Setting this to False will stop even error messages from being reported on
# the console.
console = True

# console log level
console_level = Debug

# level to log network information at
# setting this to debug will log every network message to and from the gameroom
# this is a large amount of data
net_level = Info

# level to log messages from the bot engine
engine_level = Debug

# level to log aei communication messages
aei_level = Info

# log the current position after every move
log_position = True

[bot_example]
# gameroom username
username = bot_example

# gameroom password
password = botspassword

# Method of communicating with the bot, options are stdio and socket.
communication_method = stdio

# command to run bot
cmdline = ./bot_example

# Greeting to send at the beginning of a game
greeting = Hi. I'm just a bot so don't try chatting with me.
    My handler is example writer. If you encounter any problems please notify <email address>
    Thank you for playing me and enjoy the game.

# timecontrol to start games at
#timecontrol = 30s/3/100/5/8
timecontrol = 60s/5m/75/0/4h/4m
#timecontrol = 1d/60d/100/0/300d/21d

# start rated games
rated = True

# should the bot think on opponents turn
# should probably be set to False when playing at a fixed depth
ponder = True

# options starting with bot_ are sent to configure the bot before starting play
# Size in MB for transition table
bot_hash = 200

# Maximum depth to search; in steps.
# bot_depth = 8

